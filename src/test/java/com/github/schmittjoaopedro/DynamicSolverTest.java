package com.github.schmittjoaopedro;

import com.github.schmittjoaopedro.problem.Instance;
import com.github.schmittjoaopedro.problem.Reader;
import com.github.schmittjoaopedro.problem.Solution;
import org.junit.Test;

import java.nio.file.Paths;
import java.util.Random;

import static org.assertj.core.api.AssertionsForClassTypes.assertThat;

public class DynamicSolverTest {

    private static int maxIterations = 25000;

    private static final String dpdptw100Directory;

    static {
        dpdptw100Directory = Paths.get(DynamicSolverTest.class.getClassLoader().getResource("dpdptw/100-tasks").getFile().substring(1)).toString();
    }

    @Test
    public void dpdptw_lc103_a_0_1_test() throws Exception {
        Instance instance = Reader.getInstance(Paths.get(dpdptw100Directory, "lc103_a_0.1.txt").toFile());
        Solver solver = new Solver(instance, new Random(1), maxIterations, true, true);
        solver.init();
        solver.run();
        Solution solutionBest = solver.getSolutionBest();
        assertThat(solutionBest.feasible).isTrue();
        assertThat(solutionBest.totalCost).isEqualTo(1039.159290519845);
        assertThat(solutionBest.tours.size()).isEqualTo(9);
        int counter = 0;
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [0, 1]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   2, TC =    126.74]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [2]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   3, TC =    193.89]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [3]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   4, TC =    273.21]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [4, 5]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   5, TC =    341.20]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [6, 7]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    459.67]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [8, 9]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    499.14]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [10, 11, 12]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    563.83]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    578.25] at iteration 425");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [13, 14]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    619.87]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [15, 16, 17, 18]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    791.21]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    797.38] at iteration 607");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    792.16] at iteration 608");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    788.73] at iteration 615");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    736.82] at iteration 616");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    734.41] at iteration 654");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    722.64] at iteration 658");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    713.37] at iteration 660");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [19]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    728.15]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [20, 21, 22, 23]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =    880.76]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    842.01] at iteration 789");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    786.93] at iteration 790");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    980.57] at iteration 797");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    978.77] at iteration 799");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    959.42] at iteration 802");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [24]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    965.79]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    960.04] at iteration 846");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    957.05] at iteration 864");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    947.09] at iteration 867");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [25]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    947.89]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    945.86] at iteration 957");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    942.00] at iteration 958");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    909.35] at iteration 964");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [26, 27]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    919.43]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [28]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    920.19]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [29]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    922.50]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [30]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1005.89]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    942.04] at iteration 1194");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    833.19] at iteration 1195");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    792.91] at iteration 1213");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [31]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    838.91]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [32, 33, 34]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =    883.91]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    894.77] at iteration 1356");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [35]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    894.85]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [36]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    923.85]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [37]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    931.30]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    926.31] at iteration 1649");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [38]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    928.50]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [39]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    931.43]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [40]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    935.22]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [41]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    945.88]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [42]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    972.65]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [43]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1007.47]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1003.12] at iteration 2010");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    988.97] at iteration 2011");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [44, 45]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1042.75]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [46, 47, 48]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1056.92]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1055.97] at iteration 2054");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [49]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1073.25]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1072.25] at iteration 2071");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [50]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1077.23]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [51]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1077.32]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1062.51] at iteration 2582");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1061.14] at iteration 2606");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1060.49] at iteration 2647");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1054.42] at iteration 2661");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1053.21] at iteration 4133");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1039.16] at iteration 7225");
    }

    @Test
    public void dpdptw_lc103_a_0_5_test() throws Exception {
        Instance instance = Reader.getInstance(Paths.get(dpdptw100Directory, "lc103_a_0.5.txt").toFile());
        Solver solver = new Solver(instance, new Random(1), maxIterations, true, true);
        solver.init();
        solver.run();
        Solution solutionBest = solver.getSolutionBest();
        assertThat(solutionBest.totalCost).isEqualTo(1039.159290519845);
        assertThat(solutionBest.tours.size()).isEqualTo(9);
        assertThat(solutionBest.feasible).isTrue();
        int counter = 0;
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [0]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   1, TC =     26.01]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [1]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   2, TC =    126.74]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [2]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   3, TC =    193.89]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [3]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   4, TC =    273.21]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [4]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   4, TC =    283.78]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [5]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   5, TC =    341.20]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [6]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   6, TC =    415.32]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [7]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    459.67]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [8]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    468.77]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [9]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    499.14]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [10]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    518.95]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [11]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    557.65]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    572.07] at iteration 2146");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    564.98] at iteration 2147");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [12]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    608.81]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    578.25] at iteration 2185");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [13, 14]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    619.87]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [15, 16]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    626.59]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [17]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    702.74]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    708.91] at iteration 3075");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [18]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    797.38]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    787.24] at iteration 3095");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    749.22] at iteration 3097");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    748.97] at iteration 3098");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    741.27] at iteration 3099");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    739.05] at iteration 3102");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    722.64] at iteration 3125");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    713.37] at iteration 3126");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [19]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    728.15]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [20]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    744.37]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [21, 22]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =    866.76]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    882.85] at iteration 3965");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    969.48] at iteration 3966");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    905.27] at iteration 3972");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    889.72] at iteration 3975");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [23]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    903.72]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    863.93] at iteration 4015");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [24]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    926.03]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    857.62] at iteration 4046");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    837.43] at iteration 4047");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    737.60] at iteration 4049");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    714.15] at iteration 4050");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    967.59] at iteration 4130");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    965.79] at iteration 4134");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    951.35] at iteration 4167");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    941.20] at iteration 4349");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    908.92] at iteration 4419");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    876.50] at iteration 4424");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [25]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    962.52]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    942.59] at iteration 4794");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    854.16] at iteration 4795");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    833.64] at iteration 4799");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    799.45] at iteration 4800");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    788.73] at iteration 4801");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    909.35] at iteration 4808");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [26, 27]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    919.43]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [28]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    920.19]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [29]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    922.50]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [30]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1005.89]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    994.74] at iteration 5969");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    952.32] at iteration 5971");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    912.05] at iteration 5974");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    792.91] at iteration 5995");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [31]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    838.91]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [32]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =    882.09]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    892.96] at iteration 6776");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    887.96] at iteration 6790");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [33, 34]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    889.77]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [35]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    889.85]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [36]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    918.85]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [37]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    926.31]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    906.91] at iteration 8540");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [38]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    909.11]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [39]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    912.03]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [40]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    961.94]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    940.21] at iteration 9797");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [41]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    950.88]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    946.52] at iteration 9925");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [42]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    973.29]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [43]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    993.97]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [44]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1027.75]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1005.96] at iteration 10138");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    994.77] at iteration 10141");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [45]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1023.74]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [46]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1028.39]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [47]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1049.22]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1034.20] at iteration 10236");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [48]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1034.40]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [49]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1051.67]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1050.67] at iteration 10378");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1045.68] at iteration 10392");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1040.62] at iteration 10397");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [50]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1067.53]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1055.83] at iteration 11192");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [51]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1055.92]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1054.76] at iteration 12460");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1054.42] at iteration 17650");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1054.27] at iteration 17663");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1053.21] at iteration 17668");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1047.51] at iteration 19341");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1047.13] at iteration 19342");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1044.67] at iteration 19346");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1042.02] at iteration 19352");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1041.63] at iteration 19379");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1039.16] at iteration 19396");
    }

    @Test
    public void dpdptw_lc103_q_0_0_1_test() throws Exception {
        Instance instance = Reader.getInstance(Paths.get(dpdptw100Directory, "lc103_q_0_0.1.txt").toFile());
        Solver solver = new Solver(instance, new Random(1), maxIterations, true, true);
        solver.init();
        solver.run();
        Solution solutionBest = solver.getSolutionBest();
        assertThat(solutionBest.totalCost).isEqualTo(1038.3507683136875);
        assertThat(solutionBest.tours.size()).isEqualTo(9);
        assertThat(solutionBest.feasible).isTrue();
        int counter = 0;
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   2, TC =    292.45]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   2, TC =    252.10] at iteration 2");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [7]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   2, TC =    270.90]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [8]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   3, TC =    338.05]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   3, TC =    328.45] at iteration 690");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [9]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   4, TC =    407.77]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   4, TC =    380.58] at iteration 1234");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [10]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   5, TC =    458.76]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   5, TC =    457.98] at iteration 2306");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   4, TC =    415.66] at iteration 2307");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [11]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   5, TC =    473.08]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   5, TC =    446.55] at iteration 2387");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [12]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   6, TC =    520.67]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    514.51] at iteration 2468");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    513.95] at iteration 2490");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [13]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    558.30]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    552.74] at iteration 2611");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [14]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    553.02]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [15]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    583.40]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [16]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    603.20]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [17]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    641.91]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    655.16] at iteration 4309");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    653.74] at iteration 4312");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    652.04] at iteration 4337");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [18]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    695.87]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    676.33] at iteration 4369");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    645.68] at iteration 4370");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    694.40] at iteration 4371");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    689.44] at iteration 4379");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [19, 20]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    740.32]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    803.07] at iteration 6028");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    798.81] at iteration 6031");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    743.89] at iteration 6061");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [21, 22]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    752.01]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    744.61] at iteration 6073");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [23]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    820.77]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    786.72] at iteration 6171");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    778.00] at iteration 6172");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    773.05] at iteration 6174");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    767.28] at iteration 6186");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    765.36] at iteration 6189");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    764.60] at iteration 6209");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    764.29] at iteration 6217");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    750.06] at iteration 6227");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    740.80] at iteration 6229");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [24]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    755.57]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [25]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    798.42]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    828.70] at iteration 7910");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [26]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    909.50]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    731.68] at iteration 7931");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    708.23] at iteration 7935");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    868.23] at iteration 7937");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    863.97] at iteration 7940");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [27]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    905.56]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    875.16] at iteration 7950");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    829.94] at iteration 7951");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    821.55] at iteration 7952");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    774.64] at iteration 7953");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    712.81] at iteration 7954");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    938.78] at iteration 7958");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    889.22] at iteration 7960");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    873.82] at iteration 8004");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [28]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    881.30]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [29]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    888.89]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [30]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    974.91]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    934.12] at iteration 9588");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    852.31] at iteration 9589");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    849.54] at iteration 9594");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    802.46] at iteration 9595");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    789.30] at iteration 9609");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1003.20] at iteration 9616");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    921.74] at iteration 9668");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [31]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    972.42]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [32]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    977.26]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    971.37] at iteration 10044");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    949.76] at iteration 10049");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [33]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    999.40]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    905.30] at iteration 11671");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    874.87] at iteration 11672");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    996.72] at iteration 11673");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [34]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1080.11]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1060.18] at iteration 11935");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    952.20] at iteration 11942");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    921.60] at iteration 11943");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    914.15] at iteration 11944");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    882.89] at iteration 11952");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    881.72] at iteration 11954");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    877.06] at iteration 12418");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    872.76] at iteration 12546");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    858.81] at iteration 12632");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    857.32] at iteration 12639");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [35]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =    909.79]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    927.72] at iteration 13249");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    924.21] at iteration 13316");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    916.48] at iteration 13460");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    911.26] at iteration 13466");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [36, 37]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    913.08]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    905.13] at iteration 13734");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [38]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    905.21]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [39]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    912.66]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [40]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    914.86]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [41]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    964.77]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    943.04] at iteration 19595");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [42]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    953.70]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    949.35] at iteration 19849");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    945.85] at iteration 19851");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [43]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    972.62]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [44]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    993.29]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [45]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1027.08]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1001.97] at iteration 20232");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1001.82] at iteration 20246");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [46]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1030.79]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1030.04] at iteration 20330");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1023.93] at iteration 20333");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1023.76] at iteration 20350");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [47]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1058.71]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1055.78] at iteration 20432");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1042.63] at iteration 20438");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [48]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1063.46]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [49]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1063.65]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1056.61] at iteration 20675");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1050.11] at iteration 20721");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [50]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1075.51]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1071.01] at iteration 20756");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1067.53] at iteration 20937");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1055.83] at iteration 20947");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1054.14] at iteration 22425");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [51]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1054.23]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1038.56] at iteration 23389");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1038.35] at iteration 23391");
    }

    @Test
    public void dpdptw_lc103_q_0_0_5_test() throws Exception {
        Instance instance = Reader.getInstance(Paths.get(dpdptw100Directory, "lc103_q_0_0.5.txt").toFile());
        Solver solver = new Solver(instance, new Random(1), maxIterations, true, true);
        solver.init();
        solver.run();
        Solution solutionBest = solver.getSolutionBest();
        assertThat(solutionBest.totalCost).isEqualTo(1039.1592905198452);
        assertThat(solutionBest.tours.size()).isEqualTo(9);
        assertThat(solutionBest.feasible).isTrue();
        int counter = 0;
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    819.04]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    693.93] at iteration 1");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    635.26] at iteration 2");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    719.66] at iteration 8");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    692.96] at iteration 18");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    682.86] at iteration 19");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    675.19] at iteration 24");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    671.27] at iteration 26");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    667.59] at iteration 29");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    666.99] at iteration 39");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    666.30] at iteration 86");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    666.22] at iteration 87");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [23]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   6, TC =    685.02]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    683.73] at iteration 523");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    676.34] at iteration 525");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    675.35] at iteration 533");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    671.36] at iteration 536");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    670.91] at iteration 539");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [24]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   6, TC =    740.54]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    686.64] at iteration 604");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [25]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   6, TC =    745.50]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    741.22] at iteration 689");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [26]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    820.55]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    798.33] at iteration 1234");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    795.36] at iteration 1237");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    782.47] at iteration 1250");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [27]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    860.65]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    826.87] at iteration 2306");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    740.80] at iteration 2308");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    729.01] at iteration 2309");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    721.62] at iteration 2311");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    721.56] at iteration 2324");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [28]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    778.99]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    812.09] at iteration 2387");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    809.90] at iteration 2390");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    798.47] at iteration 2391");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    797.72] at iteration 2394");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    797.27] at iteration 2398");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [29]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    803.21]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [30]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    841.92]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    841.67] at iteration 4310");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    841.61] at iteration 4314");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    824.69] at iteration 4324");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    824.44] at iteration 4326");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    965.46] at iteration 4330");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    911.63] at iteration 4331");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    904.24] at iteration 4336");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    887.19] at iteration 4338");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    884.23] at iteration 4341");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [31]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    925.10]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    863.38] at iteration 6028");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    838.25] at iteration 6032");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [32]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    847.29]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [33]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    923.44]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    934.17] at iteration 6171");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    922.33] at iteration 6830");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    908.94] at iteration 6834");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [34]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    994.89]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    984.28] at iteration 7828");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    958.87] at iteration 7835");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    805.38] at iteration 7840");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    914.38] at iteration 7862");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    910.18] at iteration 7866");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [35]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    953.02]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1077.59] at iteration 7909");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1028.37] at iteration 7913");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1028.28] at iteration 8003");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1005.47] at iteration 8082");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    972.25] at iteration 8085");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [36]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1034.35]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1031.59] at iteration 8111");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1008.14] at iteration 8117");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    955.69] at iteration 8129");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    953.65] at iteration 8133");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    952.00] at iteration 8141");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    919.23] at iteration 8143");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    908.89] at iteration 8156");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    906.82] at iteration 8160");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    862.46] at iteration 8161");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    820.76] at iteration 8163");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    815.55] at iteration 8165");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    815.46] at iteration 8170");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    815.37] at iteration 8180");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1156.26] at iteration 8826");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1107.04] at iteration 8830");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1106.71] at iteration 8831");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1106.62] at iteration 8836");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [37]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1199.94]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1157.81] at iteration 9871");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    993.50] at iteration 9881");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    990.66] at iteration 9883");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    947.07] at iteration 9884");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    900.83] at iteration 9886");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    853.92] at iteration 9887");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1245.58] at iteration 9889");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1233.12] at iteration 9893");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1221.29] at iteration 9896");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1221.01] at iteration 9897");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1201.99] at iteration 9978");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1201.75] at iteration 9983");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1201.66] at iteration 10043");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1185.45] at iteration 10239");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [38]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1235.08]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1123.51] at iteration 11675");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1118.54] at iteration 11679");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1039.53] at iteration 11680");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    952.48] at iteration 11681");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    949.71] at iteration 11682");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    934.06] at iteration 11686");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    931.82] at iteration 11706");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    918.66] at iteration 11713");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    918.56] at iteration 11718");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    913.35] at iteration 11732");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    912.62] at iteration 11847");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    912.29] at iteration 11850");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    912.20] at iteration 12153");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    900.41] at iteration 12489");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    872.08] at iteration 12796");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [39]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    918.08]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    917.77] at iteration 13584");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    914.12] at iteration 13585");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    901.57] at iteration 13591");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    897.37] at iteration 13594");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    891.03] at iteration 13595");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [40, 41]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =    976.67]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    981.80] at iteration 13734");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    981.00] at iteration 13737");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    939.57] at iteration 13767");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    939.48] at iteration 13906");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    935.83] at iteration 14381");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    919.90] at iteration 14390");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [42]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    922.09]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [43]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    925.02]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [44]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    983.28]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    975.13] at iteration 19583");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    965.77] at iteration 19671");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [45]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    976.44]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    974.47] at iteration 19892");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [46]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1001.24]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    999.02] at iteration 20060");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [47]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1029.64]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [48]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1034.29]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [49]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1034.49]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [50]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1051.77]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1050.76] at iteration 20753");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1049.24] at iteration 20803");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1045.05] at iteration 20900");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1040.71] at iteration 21088");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [51]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1071.11]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1057.64] at iteration 22393");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1057.19] at iteration 22396");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1055.92] at iteration 22402");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1047.52] at iteration 22433");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1041.63] at iteration 22435");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1039.16] at iteration 22456");
    }

}
